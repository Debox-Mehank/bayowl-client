fragment userServices on UserServices {
  _id
  mainCategory
  subCategory
  serviceName
  subService
  subService2
  description
  estimatedTime
  price
  inputTrackLimit
  uploadFileFormat
  deliveryFileFormat
  deliveryDays
  maxFileDuration
  numberOfReferenceFileUploads
  setOfRevisions
  revisionsDelivery
  mixVocalTuningBasic
  mixVocalTuningAdvanced
  mixProcessingReverbs
  mixProcessingDelays
  mixProcessingOtherFx
  addOn {
    type
    value
    qty
  }
  projectName
  paid
  uploadedFiles
  referenceFiles
  revisionFiles {
    description
    file
    revision
  }
  statusType
  status {
    name
    state
  }
  reupload
}

query Login($password: String!, $email: String!, $token: String) {
  login(password: $password, email: $email, token: $token)
}

query Register(
  $password: String!
  $email: String!
  $number: String!
  $name: String!
  $token: String
) {
  register(
    password: $password
    email: $email
    number: $number
    name: $name
    token: $token
  )
}

query CompleteAccount(
  $password: String!
  $email: String!
  $number: String!
  $name: String!
  $token: String!
) {
  completeAccount(
    password: $password
    email: $email
    number: $number
    name: $name
    token: $token
  )
}

query Me {
  me {
    _id
    name
    email
    number
    services {
      ...userServices
    }
    lastLoggedIn
    lastLoggedOut
    accountVerified
    createdAt
    updatedAt
  }
}

query Logout {
  logout
}

query InitiatePayment($service: UserServicesInput!, $email: String) {
  initiatePayment(service: $service, email: $email)
}

query UpdatePorjectName($serviceId: String!, $projectName: String!) {
  updatePorjectName(serviceId: $serviceId, projectName: $projectName)
}

query GetUserServiceDetailsById($serviceId: String!) {
  getUserServiceDetailsById(serviceId: $serviceId) {
    ...userServices
  }
}

query VerifyUser($token: String!) {
  verifyUser(token: $token)
}

query GetS3SignedURL($fileName: String!) {
  getS3SignedURL(fileName: $fileName)
}

query InitFileUpload($fileName: String!) {
  initFileUpload(fileName: $fileName) {
    fileId
    fileKey
  }
}

query GetMultipartPreSignedUrls(
  $parts: Float!
  $fileKey: String!
  $fileId: String!
) {
  getMultipartPreSignedUrls(parts: $parts, fileKey: $fileKey, fileId: $fileId) {
    signedUrl
    PartNumber
  }
}

query FinalizeMultipartUpload($input: FinalMultipartUploadInput!) {
  finalizeMultipartUpload(input: $input)
}

query UploadFilesForService(
  $referenceUploadedFiles: [String!]!
  $uplodedFiles: [String!]!
  $serviceId: String!
) {
  uploadFilesForService(
    referenceUploadedFiles: $referenceUploadedFiles
    uplodedFiles: $uplodedFiles
    serviceId: $serviceId
  )
}
